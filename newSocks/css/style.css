.container {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container {
    max-width: 960px;
  }
}

@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}

a {
  text-decoration: none;
  color: inherit;
}

header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  position: relative;
  height: auto;
  width: 100%;
}

.navigation {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;

  position: absolute;
  z-index: 1050;
  height: 75px;
  width: 100%;
  top: 0;
}

.logo {
  width: 50%;
  height: 100%;
  display: flex;
  align-items: center;
}

.nav_bar {
  width: 50%;
  height: 100%;
}

.nav_list {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

.list_item {
  color: #fff;
}

.header_left {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: left;
  width: 50%;
  height: 100%;
}

.left_desc {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  margin-left: 125px;
}

.header_right {
  width: 50%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-content: center;
  justify-content: center;
  position: relative;
  z-index: 1000;
}

.slider_block {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.slide {
  width: 100%;
  height: 100%;
  display: flex !important;
  justify-content: center;
  align-items: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

.slide p {
  text-transform: uppercase;
  color: #fff;
  width: 110px;
  text-align: left;

  position: absolute;
  top: 20%;
  left: 22%;
  font-size: 22px;
}

.slider_block .slick-slide {
  height: 651px;
}

.slick-slide div {
  height: 100%;
}


.slide-img {
  width: 45%;
  height: 60%;
}

.slick-vertical .slick-slide {
  border: 0;
}

.slick-dotted.slick-slider {
  margin-bottom: 0;
}

button.slick-next.slick-arrow {
  position: absolute;
  z-index: 1001;
  left: 20%;
  bottom: 43%;
  background-color: transparent;
  border: none;
  outline: none;
  color: #fff;
}

button.slick-prev.slick-arrow {
  position: absolute;
  z-index: 1001;
  left: 20%;
  top: 42%;
  background-color: transparent;
  border: none;
  outline: none;
  color: #fff;
}

.slick-dots {
  position: absolute;
  left: 20%;
  top: 45%;
  z-index: 1002;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  width: auto;
  padding: 0;
  margin: 0;

  list-style: none;

  text-align: center;
  transform: translate(-10%);
}

.slick-dots li {
  position: relative;

  display: inline-block;

  width: 20px;
  height: 20px;
  margin: 0 5px;
  padding: 0;

  cursor: pointer;
}

.slick-dots li button {
  font-size: 0;
  line-height: 0;

  display: block;

  width: 20px;
  height: 20px;
  padding: 5px;

  cursor: pointer;

  color: #fff;
  border: 0;
  outline: none;
  background: transparent;
}

.slick-dots li button:hover,
.slick-dots li button:focus {
  outline: none;
}

.slick-dots li button:hover:before,
.slick-dots li button:focus:before {
  opacity: 1;
}

.slick-dots li button:before {
  font-family: 'slick';
  font-size: 35px;
  line-height: 20px;

  position: absolute;
  top: 0;
  left: 0;

  width: 20px;
  height: 20px;

  content: 'â€¢';
  text-align: center;

  opacity: .25;
  color: #fff;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.slick-dots li.slick-active button:before {
  opacity: .75;
  color: #fff;
}

/* 
.container {
  width: 1200px;
  margin: 0 auto;
} */


.section {
  height: 100%;
}

.screen2 {
  height: 100%;
  /* background: url(../img/screen2.jpg) center center no-repeat; */
  background-size: 100% 50%;
  position: relative;
}

.screen2 .container {
  height: 100%;
}
.screen2 .advantage{
  padding: 70px 0 50px 0
}
.advantage {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  height: 100%;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.advantageItem {
  width: 41%;
  position: relative;
  padding-left: 95px;
  margin: 25px 0;
}

.advantageItem__img {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 110px;
  text-align: center;
  font-size: 60px;
}

.advantageItem__title {
  color: #000;
  font-size: 30px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 36px;
  letter-spacing: 2.25px;
  margin-bottom: 25px;
}

.advantageItem__text {
  color: #666666;
  font-size: 15px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 21.01px;
  letter-spacing: 0.75px;
}

.screen3 {
  height: 100%;
  background: url(../img/Rectangle.png) center top no-repeat;
  background-color: #fff;
  background-size: 100% 50%;
  position: relative;
}

.screen3 .container {
  height: 100%;
}

.screen3 .advantage {
  height: 50%;
}

.bigTitle {
  height: 50%;
  color: #fff;
  font-size: 38px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 60px;
  letter-spacing: 2.85px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0px;
  padding: 75px 0;
}

.screen4 {
  height: 100%;
  background: url(../img/Rectangle.png) center top no-repeat;
  background-color: #fff;
  background-size: 100% 50%;
  position: relative;
}

.screen4 .container {
  height: 100%;
}

.screen4 .bigTitle {
  color: #565656;
}

.delivery {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 50%;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.deliveryItem {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.deliveryItem__img {
  margin-right: 70px;
  font-size: 70px
}

.deliveryItem__title {
  color: #000;
  font-size: 30px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 36px;
  letter-spacing: 2.25px;
  margin-bottom: 25px;
  margin-right: 80px;
}

.deliveryItem__text {
  color: #666666;
  font-size: 15px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 21.01px;
  letter-spacing: 0.75px;
}

.deliveryItem__text p {
  margin-top: 0px;
}

.screen5 {
  height: 100%;
  background: url(../img/Rectangle.png) center top no-repeat;
  background-color: #fff;
  background-size: 100% 50%;
  position: relative;
}

.screen5 .container {
  height: 100%;
}

.screen5 .bigTitle {
  color: #565656;
  height: auto;
  width: 100%;
  margin-top: auto;
}

.screen5 .advantageItem__img {
  color: #000;
  font-size: 84px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 60px;
  letter-spacing: 6.3px;
}

.screen5 .advantageItem__title a {
  color: #000;
  border-bottom: 3px dashed #000;
  text-decoration: none;
}

.screen5 .advantageItem__title a:hover {
  color: #1584ca;
  border-bottom-color: #1584ca;
}

@media (max-width: 1199px) {
  .container {
    width: 970px;
  }

  .advantageItem {
    width: 49%;
  }

  .advantageItem__title {
    font-size: 25px;
    line-height: 26px;
    margin-bottom: 15px;
  }

  .deliveryItem__title {
    font-size: 25px;
    line-height: 30px;
  }
}

/* Tablet */
@media (max-width: 991px) {
  .container {
    width: 750px;
  }
}

/* Phone */
@media (max-width: 767px) {
  .container {
    width: 100%;
  }

  .section {
    height: auto !important;
    padding-top: 0px !important;
  }

  .advantageItem {
    width: 100%;
    padding-left: 0px;
    padding: 0 40px;
    margin: 30px 0;
  }

  .advantageItem__img {
    display: none;
  }

  .bigTitle {
    font-size: 30px;
    line-height: 40px;
    text-align: center;
  }

  .screen3,
  .screen4,
  .screen5 {
    height: auto;
    background-position: center top;
    background-size: auto 450px;
  }

  .screen3 .bigTitle,
  .screen4 .bigTitle,
  .screen5 .bigTitle {
    height: 200px;
    margin-bottom: 30px;
  }

  .deliveryItem {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding: 20px 40px 40px;
  }

  .deliveryItem__img {
    display: none;
  }
}

@media (max-width: 479px) {
  body {
    overflow: hidden;
  }

  .advantageItem,
  .deliveryItem {
    padding-left: 20px;
    padding-right: 20px;
  }

  .delivery {
    display: block;
  }
}
footer,
section {
  display: block;
}

button,
input,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

button,
input {
  /* 1 */
  overflow: visible;
}

button {
  /* 1 */
  text-transform: none;
}
button,
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

textarea {
  overflow: auto;
}


/* 
.container {
  width: 1200px;
  margin: 0 auto;
} */


.btn {
  border-radius: 20px;
  border: 2px solid #b6b6b6;
  background-color: #fff;
  display: inline-block;
  padding: 0 25px;
  color: #2e2e2e;
  font-size: 15px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 34px;
  letter-spacing: 1.13px;
  text-decoration: none;
  display: block;
  height: 40px;
  cursor: pointer;
  outline: none;
}

.btn:hover {
  color: #1584ca;
  border-color: #1584ca;
}

.form {
  background: #f5f5f5;
  padding: 20px 35px;
}

.form input {
  border: 2px solid #d1d1d1;
  background-color: #fff;
  height: 44px;
  padding: 0 12px;
  color: #2e2e2e;
  font-size: 14px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 21.01px;
  letter-spacing: 0.35px;
  width: 100%;
  margin-bottom: 12px;
  outline: none;
}

.form textarea {
  border: 2px solid #d1d1d1;
  background-color: #fff;
  height: 80px;
  padding: 7px 12px;
  color: #2e2e2e;
  font-size: 14px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 21.01px;
  letter-spacing: 0.35px;
  width: 100%;
  margin-bottom: 12px;
  resize: none;
  outline: none;
}

.section {
  height: 100%;
}

.screen6 {
  height: 100%;
}

.screen6 .container {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.contacts {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 60%;
}

.contacts-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.contactsItem {
  width: 48%;
}

.contactsItem__title {
  color: #000;
  font-size: 30px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 36px;
  letter-spacing: 2.25px;
  margin-bottom: 15px;
}

.contactsItem__title a {
  color: #000;
  border-bottom: 3px dashed #000;
  text-decoration: none;
}

.contactsItem__title a:hover {
  color: #1584ca;
  border-bottom-color: #1584ca;
}

.contactsItem__text {
  color: #383838;
  font-size: 15px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 24px;
  letter-spacing: 0.75px;
}

.contacts-forms {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-top: 20px;
}

.contacts-forms .form {
  width: 48%;
}

.contacts-forms .form__form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.form_subscribe .form__title {
  color: #000;
  font-size: 30px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 36px;
  letter-spacing: 2.25px;
  margin-bottom: 20px;
}

.form_subscribe .form__form {
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.form_subscribe .form__form input {
  margin-right: 25px;
  text-transform: uppercase;
}

.form_feedback .form__title {
  color: #3f3f3f;
  font-size: 17px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 30px;
  letter-spacing: 0.17px;
  margin-bottom: 10px;
}

.form_feedback input {
  height: 34px;
  width: 48%;
  margin-right: 4%;
}

.form_feedback input:nth-child(2) {
  margin-right: 0px;
}

.form_feedback .btn {
  margin-left: auto;
}

footer {
  margin-top: auto;
}

.footer-top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-bottom: 20px;
  border-bottom: 1px solid #c9c9c9;
  margin-bottom: 20px;
}

.copir {
  color: #383838;
  font-size: 15px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 24px;
  letter-spacing: 0.75px;
}

.footer-text {
  color: #656565;
  font-size: 14px;
  font-family: "ClearSans-Medium";
  font-weight: 500;
  line-height: 21.01px;
  letter-spacing: 0.7px;
}

.footer-menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  margin-bottom: 50px;
}

.footer-menu a {
  color: #3c3c3c;
  font-size: 15px;
  font-family: "ClearSans-Bold";
  font-weight: 700;
  line-height: 30px;
  letter-spacing: 0.38px;
  text-decoration: none;
}

.footer-menu a:hover {
  color: #1584ca;
}

@media (max-width: 1199px) {
  .container {
    width: 970px;
  }
}

/* Tablet */
@media (max-width: 991px) {
  .container {
    width: 750px;
  }

  .contactsItem__title {
    font-size: 20px;
    line-height: 30px;
  }

  .form_subscribe .form__form {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}

/* Phone */
@media (max-width: 767px) {
  .container {
    width: 100%;
  }

  .section {
    height: auto !important;
    padding-top: 0px !important;
  }

  .contacts-info {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding: 0 40px;
  }

  .contactsItem__title {
    font-size: 25px;
  }

  .contactsItem {
    width: 100%;
    margin-bottom: 50px;
  }

  .contacts-forms {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }

  .contacts-forms .form {
    width: 100%;
    margin-bottom: 50px;
  }

  footer {
    padding: 0 40px;
  }

  .footer-text {
    display: none;
  }

  .footer-menu {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-bottom: 10px;
  }

  .footer-menu a {
    width: 100%;
    display: block;
    text-align: center;
    line-height: 40px;
  }
}

@media (max-width: 479px) {
  body {
    overflow: hidden;
  }

  .contacts-info {
    padding-left: 20px;
    padding-right: 20px;
  }

  .contactsItem__title {
    font-size: 15px;
    line-height: 25px;
  }

  .form_subscribe .form__title {
    font-size: 20px;
    line-height: 26px;
  }

  .form_subscribe .form__form {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }

  .form_feedback input {
    width: 100%;
    margin-right: 0px;
  }

  .form {
    padding: 20px 20px;
  }

  footer {
    padding: 0 20px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */